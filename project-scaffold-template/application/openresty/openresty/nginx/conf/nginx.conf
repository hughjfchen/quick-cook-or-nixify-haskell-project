# a list of env vars that nginx will make avaliable for configuration files and Lua code
env POSTGREST_HOST;
env POSTGREST_PORT;
env JWT_SECRET;
env DB_SCHEMA;
env DB_HOST;
env DB_PORT;
env DB_NAME;
env DB_USER;
env DB_PASS;
env DEVELOPMENT;
env OPENRESTY_DOC_ROOT;

worker_processes  1;
events {
    worker_connections  1024;
}

# [ debug | info | notice | warn | error | crit ]
error_log  $OPENRESTY_RUN_DIR/log/error.log  info;

http {
    
    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '${prefix}../lualib/user_code/?.lua;;';
    init_by_lua_file '../lualib/user_code/init_phase.lua';
    
    # a shorter log format for development
    log_format development '[$time_local] "$request" $status $body_bytes_sent "$request_time ms"';

    resolver $OPENRESTY_RESOLVER;

    client_body_temp_path $OPENRESTY_RUN_DIR/client_body;

    server {
        listen $OPENRESTY_LISTEN_PORT default_server;
        server_name $OPENRESTY_SERVER_NAME;
        charset utf-8;
        # uninitialized_variable_warn off;
        

        #depending the env (production/development) switch between log formats
        set_by_lua_block $development  { return os.getenv('DEVELOPMENT') or "0" }
        set $log_development 0;
        set $log_production 0;
        if ($development = "1") {
            set $log_development 1;
        }
        if ($development = "0") {
            set $log_production 1;
        }
        access_log $OPENRESTY_RUN_DIR/log/access.log combined    if=$log_production;
        access_log $OPENRESTY_RUN_DIR/log/access.log development if=$log_development;
        
        # enable gzip compression
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/vnd.pgrst.object+json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
       
	# set the doc root based on env  
	    set $my_doc_root '';
        set_by_lua_block $my_doc_root { return os.getenv('OPENRESTY_DOC_ROOT') or "/srv" }
	    root $my_doc_root;

        # comment out this now
        # include openidc-discovery-test.conf;

        include rest.conf;
        
        include auth.conf;

        # this is for the /parsedump
        include parsedump.conf;

        # this is for the /ecsparsedump
        include ecsparsedump.conf;

        # this is for the /dumpfiles
        include dumpfiles.conf;

        # this is for the /getparsereport
        include getparsereport.conf;

        # this is for the /uploadreport
        include uploadreport.conf;

        # this is for the /parsereports
        include parsereports.conf;

        # this is the last location in the chain that points to html directory
        # this is where the files of your frontend application would go (html/javascript/css)
        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}
