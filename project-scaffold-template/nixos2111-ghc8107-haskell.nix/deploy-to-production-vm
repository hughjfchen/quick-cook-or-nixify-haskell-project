#!/usr/bin/env bash

if ! type dirname > /dev/null 2>&1; then
    echo "Not even a linux or macOS, Windoze? We don't support it. Abort."
    exit 1
fi

. "$(dirname "$0")"/cd/common/common.sh

init_with_root_or_sudo "$0"

SCRIPT_ABS_PATH=$(turn_to_absolute_path "$0")

begin_banner "Top level" "project deploy - production-vm "

if [ -f "$SCRIPT_ABS_PATH"/.I.am.here.to.indicate.this.is.the.building.machine ]; then
    if [ $# != 4 ]; then
      echo "usage: $(basename "$0") deployTargetHostname isSystemd deployTargetUsername attrNameToBeBuilt"
      exit 125
    fi
    [ -d "$SCRIPT_ABS_PATH"/config/test/"$1" ] || (echo "Directory $SCRIPT_ABS_PATH/config/test/$1 not exists" && exit 126)

    set +u
    [ -e "$HOME"/.nix-profile/etc/profile.d/nix.sh ] && . "$HOME"/.nix-profile/etc/profile.d/nix.sh
    set -u

    # build the boundle for the specific release target
    nix-build ./release.nix --arg releasePhase '"production"' --arg releaseHost \""$1"\" --arg genSystemdUnit "$2" --attr "$4" --out-link "$4"

    # save the env
    MY_NIX_STORE_PATH=$(readlink "$SCRIPT_ABS_PATH"/result)

    # save the nix path for use on the deployed machine
    echo "$MY_NIX_STORE_PATH" > "$SCRIPT_ABS_PATH"/.build.output.nix.store.path
    echo "$2" > "$SCRIPT_ABS_PATH"/.release.has.systemd.service
    echo "$3" > "$SCRIPT_ABS_PATH"/.release.user.name
    echo "$4" > "$SCRIPT_ABS_PATH"/.release.tarball.name

    # pack the build artifact up with the dependencies
    "$SCRIPT_ABS_PATH"/ci/pack-tarball/do.sh "$4"

    # pack the install script
    "$SCRIPT_ABS_PATH"/ci/fix-up/do.sh "$4" "$(basename "$0")"

else
    #RELEASE_DOCKER_ON_TARGET="true" RELEASE_USER_NAME="$3" "$SCRIPT_ABS_PATH"/cd/prepare-env/do.sh
    RELEASE_DOCKER_ON_TARGET="" RELEASE_USER_NAME="$(cat "$SCRIPT_ABS_PATH"/.release.user.name)" "$SCRIPT_ABS_PATH"/cd/prepare-env/do.sh
    RELEASE_USER_NAME="$(cat "$SCRIPT_ABS_PATH"/.release.user.name)" RELEASE_TARBALL_NAME="$(cat "$SCRIPT_ABS_PATH"/.release.tarball.name)" "$SCRIPT_ABS_PATH"/cd/unpack-tarball/do.sh
    RELEASE_HAS_SYSTEMD_SERVICE="$(cat "$SCRIPT_ABS_PATH"/.release.has.systemd.service)" NIX_STORE_PATH="$(cat "$SCRIPT_ABS_PATH"/.build.output.nix.store.path)" "$SCRIPT_ABS_PATH"/cd/fix-up/do.sh
fi

done_banner "Top level" "project deploy - production-vm"
